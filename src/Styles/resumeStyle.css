* {
  box-sizing: border-box;
}

.list {
  font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto,
    segoe ui, arial, sans-serif;
  width: 60%;
  left: 53%;
  margin-top: 2rem;
  transform: translate(-53%);
}

.listCard {
  font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto,
    segoe ui, arial, sans-serif;
  margin-right: auto;
  margin-left: auto;
  overflow: hidden;
}

.listCard > div {
  position: absolute;
  will-change: transform, width, height, opacity;
  padding: 24px;
}

.listCard > div > div {
  position: relative;
  background-size: cover;
  background-position: center center;
  width: 100%;
  height: 100%;
  overflow: hidden;
  text-transform: uppercase;
  font-size: 10px;
  line-height: 10px;
  border-radius: 10px;
  box-shadow: 0px 10px 20px -10px rgba(0, 0, 0, 0.2);
}

.list > div {
  position: absolute;
  will-change: transform, width, height, opacity;
  padding: 24px;
}

.list > div > div {
  position: relative;
  background-size: cover;
  background-position: center center;
  width: 100%;
  height: 100%;
  overflow: hidden;
  text-transform: uppercase;
  font-size: 10px;
  line-height: 10px;
  border-radius: 10px;
  box-shadow: 0px 10px 20px -10px rgba(0, 0, 0, 0.2);
}

.card {
  width: 45ch;
  height: 45ch;
  border-radius: 8px;
  background-position: center center;
}

.card:hover {
  transition: transform 1s;
}

.dot {
  margin: 0 !important;
  transition: transform 0.4s;
  border: 1px solid rgba(0, 0, 0, 0);
}

.dot :hover {
  transform: scale(1.2);
}

.seperator {
  transition: transform 0.3s, box-shadow 0.3s;
  cursor: pointer;
  flex-direction: row !important;
}

.seperator :hover {
  transform: scale(1.2);
  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);
}

.connector {
  background-color: rgba(179, 192, 202, 0.8) !important;
  transform: scale(1) !important;
  width: 5px !important;
}

.timelineButton {
  height: 100%;
  padding-left: 22px !important;
  width: 100%;
  font-size: 1rem;
  border: 1px solid rgba(0, 0, 0, 0);
}

.timelineContentActive {
  height: 38px;
  padding: 0 !important;
  border-radius: 5px;
  z-index: -1;
}

.button {
  cursor: pointer;
  margin: 16px;
  background-color: transparent;
}

.button :hover {
  transform: scale(1.2);
  transition: transform 0.6s;
  background-color: transparent;
}

.icon {
  transition: transform 0.3s, box-shadow 0.3s;
  color: rgba(0, 0, 0, 0.54);
}

.icon :hover {
  transform: scale(1);
  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);
}

.arrow {
  margin: 16px;
  transition: transform 0.3s, box-shadow 0.3s;
  color: rgba(0, 0, 0, 0.54);
}

.arrow :hover {
  transform: scale(1);
  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);
}

.details {
  width: 80%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.homeIcon {
  position: absolute;
  border-radius: 5px;
  box-shadow: 0 9px 12px 1px rgba(0, 0, 0, 0.14), 0 3px 16px 2px rgba(0, 0, 0, 0.12), 0 5px 6px -3px rgba(0, 0, 0, 0.2);
  top: 50%;
  left: 50%;
}

.homeIcon button {
  transition: transform 1s;
}

.homeIcon button:hover {
  transform: scale(1.4);
  box-shadow: rgba(0, 0, 0, 0.14) 0px 9px 12px 1px, rgba(0, 0, 0, 0.12) 0px 3px 16px 2px,
    rgba(0, 0, 0, 0.2) 0px 5px 6px -3px;
}

.navText {
  color: rgba(33, 45, 71, 1);
}

.navText :hover {
  color: rgba(33, 45, 71, 1);
}

/* starting ENTER animation */
.messageout-enter {
  transform: translateY(0%) scale(0.01);
}

/* ending ENTER animation */
.messageout-enter-active {
  transform: translateY(0%) scale(1);
  transition: all 500ms ease-in-out;
}

/* starting EXIT animation */
.stepstepscardAnimationscard-exit {
  transform: translateY(0%) scale(1);
}

/* ending EXIT animation */
.stepscardAnimation-exit-active {
  transform: translateY(0%) scale(0);
  transition: all 500ms ease-in-out;
}

.canvas {
  /* animation: spin 4s infinite */
  transform: rotate3d(1, 0 , 0, 60deg)
}

@keyframes spin {
  0% {
    transform: rotate3d(0, 0, 0, 60deg) scaleX(-1);
  }
  25% {
    transform: rotate3d(1, 0 , 60deg) scaleX(-1);
  }
  50% {
    transform: rotate3d(0, 0 , 60deg) scaleX(-1);
  }
  75% {
    transform: rotate3d(-1, 0 , 60deg) scaleX(-1);
  }
  100% {
    transform: rotate3d(0, 0 , 60deg) scaleX(-1);
  }
}
